@protocol = http://
@hostname = localhost
@port = 8000
@host = {{protocol}}{{hostname}}:{{port}}

### teszt
get {{host}}/api/

# ----------------- login -------------------
### login
# @name login
POST {{host}}/api/users/login 
Accept: application/json
Content-Type: application/json

{
    "email": "test@example.com",
    "password": "123"
}

###
@token = {{login.response.body.user.token}}

### logout
POST {{host}}/api/users/logout 
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

### get users
get {{host}}/api/users
Accept: application/json
Authorization: Bearer {{token}}

### get user by Id
get {{host}}/api/users/1
Accept: application/json
Authorization: Bearer {{token}}

### post user
post {{host}}/api/users
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "name": "test6",
    "roleId": 2,
    "email": "test6@example.com",
    "password": "123"
}

### delete user by id
delete {{host}}/api/users/3
Accept: application/json
Authorization: Bearer {{token}}

### patch user by id
patch {{host}}/api/users/2
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "password": "1234"
}

# ----------------- login -------------------

# ----------------- roles -------------------
### get roles
get {{host}}/api/roles

### create roles
post {{host}}/api/roles/
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "role": "creator"
}

### get role by id
get {{host}}/api/roles/5

### patch role
patch {{host}}/api/roles/5
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "role": "test"
}

### delete role by id
delete {{host}}/api/roles/5
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

# ----------------- roles -------------------

# ----------------- categories -------------------
### get categories
get {{host}}/api/categories

### get categories by id
GET {{host}}/api/categories/1


### post new category
POST {{host}}/api/categories/
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "category": "Lenin",
    "level": "emelt",
    "text": "1870-1924"
}

### update category
patch {{host}}/api/categories/51
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "category": "Lenin",
    "level": "emelt",
    "text": "1870-1924-ig élt."
}

### delete category by id
delete {{host}}/api/categories/51
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}




# ----------------- categories -------------------


# ----------------- source ------------------

### get sources
get {{host}}/api/sources

### create source
post {{host}}/api/sources/
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "categoryId": 3,
    "sourceLink": "test",
    "note": "test"
}

### get source by id
get {{host}}/api/sources/5

### patch source
patch {{host}}/api/sources/5
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "categoryId": 3,
    "sourceLink": "test",
    "note": "test"
}

### delete source by id
delete {{host}}/api/sources/5
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}


# ----------------- sources -------------------

# ----------------- questionTypes -------------------

### get questionType
get {{host}}/api/questionTypes

### get questionType by id
GET {{host}}/api/questionTypes/1

### post new questionType
POST {{host}}/api/questionTypes/
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "questionCategory": "adasdad"
}

### update questionType
patch {{host}}/api/questionTypes/4
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "questionCategory": "hghghghg"
}

### delete questionType by id
delete {{host}}/api/questionTypes/4
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

# ----------------- questionTypes -------------------

# ----------------- questions -------------------

### get questions
get {{host}}/api/questions

### create new question
POST {{host}}/api/questions/
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "question": "Mi az a szovjet?",
    "questionTypeId": 2,
    "categoryId": 20 
}

### get question by id
GET {{host}}/api/questions/7

### update questionType
patch {{host}}/api/questions/7
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "question": "Mi az a tervgazdaság?",
    "questionTypeId": 2,
    "categoryId": 20 
}

### delete questionType by id
delete {{host}}/api/questions/7
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

# ----------------- questions -------------------

# ----------------- answers -------------------

### get answers
get {{host}}/api/answers

### create new answers
POST {{host}}/api/answers/
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "answer": "Ez a kérdés egy teszt",
    "questionId": 2,
    "rightAnswer": 1
}

### get answer by id
GET {{host}}/api/answers/4

### update answer
patch {{host}}/api/answers/4
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "answer": "Ez a kérdés is egy teszt",
    "questionId": 4,
    "rightAnswer": 1
}

### delete questionType by id
delete {{host}}/api/answers/9
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

# ----------------- answers -------------------

# ----------------- userTests -------------------

### get userTests
get {{host}}/api/userTests

### create new userTest
POST {{host}}/api/userTests/
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "userId": 1,
    "testName": "Teszt 3",
    "score": 64.3 
}

### get user test by id
GET {{host}}/api/userTests/5

### update userTest
patch {{host}}/api/userTests/5
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    
    "testName": "Teszt 10"
    
}

### delete userTest by id
delete {{host}}/api/userTests/5
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}


# ----------------- userTests -------------------

# ----------------- testQuestions -------------------

### get testQuestions
get {{host}}/api/testQuestions

### create new test question
POST {{host}}/api/testQuestions/
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "questionId": 3,
    "answerId": 17,
    "userTestId": 3
}

### get test question by id
GET {{host}}/api/testQuestions/5

### update testQuestions
patch {{host}}/api/testQuestions/16
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "questionId": 3,
    "answerId": 16,
    "userTestId": 3
}

### delete test question by id
delete {{host}}/api/testQuestions/16
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{token}}


# ----------------- testQuestions -------------------





